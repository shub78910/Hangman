{"version":3,"sources":["RandomWord.js","Hangman.js","images/0.jpg","images/1.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/5.jpg","images/6.jpg","App.js","index.js"],"names":["movies","randomWord","movieArray","Object","keys","Math","floor","random","length","guessedWordArray","defaultProps","maxWrong","images","image0","image1","image2","image3","image4","image5","image6","alphabets","Hangman","useState","noOfWrong","guessed","Set","answer","data","setData","gameStatus","setGameStatus","gameOver","isWinner","join","handleAplhabetClick","e","clickedLetter","target","innerText","includes","add","useEffect","onClick","document","querySelector","classList","toggle","className","src","alt","split","map","letter","has","disabled","id","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"8MAAIA,EACA,CACA,eAAgB,aAChB,eAAgB,oBAChB,YAAa,4CACb,eAAgB,sBAChB,OAAU,+DACV,kBAAmB,8EACnB,MAAS,iIACT,MAAS,iDACT,aAAc,sBACd,eAAgB,+BAChB,QAAW,gBACX,SAAY,0BACZ,oBAAqB,2IACrB,cAAe,mGACf,kBAAmB,mCAGrB,SAASC,IACP,IAAIC,EAAaC,OAAOC,KAAKJ,GAC7B,OAAOE,EACLG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWM,S,UCFxCC,ECpBW,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8B,OPWrCC,EAAe,CACfC,SAAU,EACVC,OAAQ,CAACC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,IAGzDC,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAChD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,KA+HvBC,MApHf,WAAoB,IAAD,EACf,EAAwBC,mBAAS,CAC7BC,UAAW,EACXC,QAAS,IAAIC,IACbC,OAAQzB,MAHZ,mBAAO0B,EAAP,KAAaC,EAAb,KAMA,EAAkCN,mBAAS,IAA3C,mBAAMO,EAAN,KAAiBC,EAAjB,KAOIC,EAAWJ,EAAKJ,WAAab,EAAaC,UAAyB,aAAbkB,GAAwC,cAAbA,EAEjFG,GAA2B,QAAhB,EAAAvB,SAAA,eAAkBwB,KAAK,MAAON,EAAKD,OAGlD,SAASQ,EAAoBC,GACzB,IAAIC,EAAgBD,EAAEE,OAAOC,UACzBX,EAAKD,OAAOa,SAASH,GACrBR,EAAQ,2BACDD,GADA,IAEHH,QAASG,EAAKH,QAAQgB,IAAIJ,MAI9BR,EAAQ,2BACDD,GADA,IAEHJ,UAAWI,EAAKJ,UAAY,KAgCxC,OA1BAkB,qBAAU,YACHV,GAAYC,IAEPF,EADAE,EACc,WAGA,eAGxB,CAACvB,IAkBC,gCACA,sBAAKiC,QAPT,WACkBC,SAASC,cAAc,YAC7BC,UAAUC,OAAO,WAKEC,UAAU,SAArC,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,mBAGnB,sBAAKA,UAAU,UAAf,UACI,yDACA,mHAGA,uBAAM,uBAHN,qFAKA,uBAAM,uBALN,sDAOA,uBAAM,uBAPN,eAaA,yCAEA,qBAAKC,IAAKtC,EAAaE,OAAOe,EAAKJ,WAAY0B,IAAI,UAAU,uBAC7D,kDACA,0CAAajD,EAAO2B,EAAKD,WAAe,uBACxC,+CAAkBhB,EAAaC,SAAWgB,EAAKJ,UAA/C,OAA8Db,EAAaC,YAG3E,qBAAKoC,UAAU,SAAf,SACEhB,EAA2BJ,EAAKD,OApFtCjB,EAAmBkB,EAAKD,OAAOwB,MAAM,IAAIC,KAAI,SAAAC,GAAM,OAAKzB,EAAKH,QAAQ6B,IAAID,GAAUA,EAAS,YAuFxF,8BACKhC,EAAU+B,KAAI,SAAAC,GACX,OAAQ,wBAEJV,QAASR,EACToB,SAAU3B,EAAKH,QAAQ6B,IAAID,IAAWrB,EACtCgB,UAAU,YAJN,SAMPK,GALQA,QAUjB,qBAAKL,UAAU,aAAf,SAA6BlB,IAC7B,wBAAQ0B,GAAG,QAAQb,QAhE3B,WACId,EAAQ,CACJL,UAAW,EACXC,QAAS,IAAIC,IACbC,OAAQzB,MAGZ6B,EAAc,KAyDV,yBQhIG0B,MAVf,WAGE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCFNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,W","file":"static/js/main.ee3c5073.chunk.js","sourcesContent":["let movies = \r\n    {\r\n    \"forrest-gump\": \"Tom Hanks!\",\r\n    \"pulp-fiction\": \"Tarantino classic\",\r\n    \"gone-girl\": \"Movie about a mysteriously missing writer\",\r\n    \"harry-potter\": \"wingardium leviosa!\",\r\n    \"batman\": \"It's not who I am underneath, but what I do that defines me.\",\r\n    \"the-dark-knight\": \"Madness, as you know, is a lot like gravity. All it takes is a little push.\",\r\n    \"borat\": \"My country send me to the United States to make a movie-film. Please, come and see my film. If not success, I will be execute.\",\r\n    \"joker\": \"I just donâ€™t want to feel so bad anymore.\",\r\n    \"life-of-pi\": \"Richar parkerrrr!!!\",\r\n    \"the-terminal\": \"Krakozhiaa!/TomHanks/Airport\",\r\n    \"memento\": \"Nolan classic\",\r\n    \"rockstar\": \"AR rahman/Mohit Chauhan\",\r\n    \"good-will-hunting\": \"He pushes people away before they get a chance to leave him. It's a defense mechanism. And for 20 years he's been alone because of that.\",\r\n    \"the-shining\": \"Wendy? Darling? Light, of my life. I'm not gonna hurt ya. I'm just going to bash your brains in.\",\r\n    \"american-psycho\": \"I've got an 8:30 rez at Dorsia.\"\r\n  }\r\n  \r\n  function randomWord() {\r\n    let movieArray = Object.keys(movies)\r\n    return movieArray[\r\n      Math.floor(Math.random() * movieArray.length)\r\n    ];\r\n  }\r\n  \r\n  export { randomWord };\r\n  export {movies}; ","import React, { Component, useEffect, useState } from \"react\";\r\nimport { randomWord,movies } from \"./RandomWord\";\r\nimport \"./Hangman.css\";\r\nimport image0 from \"./images/0.jpg\";\r\nimport image1 from \"./images/1.jpg\";\r\nimport image2 from \"./images/2.jpg\";\r\nimport image3 from \"./images/3.jpg\";\r\nimport image4 from \"./images/4.jpg\";\r\nimport image5 from \"./images/5.jpg\";\r\nimport image6 from \"./images/6.jpg\";\r\n\r\nlet defaultProps = {\r\n    maxWrong: 6,\r\n    images: [image0, image1, image2, image3, image4, image5, image6],\r\n};\r\n\r\nlet alphabets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\r\n    'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\r\n    't', 'u', 'v', 'w', 'x', 'y', 'z',\"-\"];\r\n\r\nlet guessedWordArray;\r\n\r\n// in the deployed version of this, the is winner thing is not working properly.\r\n// do that tomorrow first thing\r\n// then you have to stylise the memory card app\r\n// add transistions and flips and also, add timer\r\n// then youmay post them on linked in and chill.\r\n\r\n\r\nfunction Hangman() {\r\n    const [data, setData] = useState({\r\n        noOfWrong: 0,\r\n        guessed: new Set(),\r\n        answer: randomWord(),\r\n    })\r\n\r\n    const[gameStatus,setGameStatus] = useState(\"\")\r\n\r\n    function guessedWord() {\r\n        guessedWordArray = data.answer.split(\"\").map(letter => (data.guessed.has(letter) ? letter : \" __ \"))\r\n        return guessedWordArray\r\n    }\r\n\r\n    let gameOver = data.noOfWrong >= defaultProps.maxWrong || gameStatus===\"You win!\" || gameStatus===\"You lose!\";\r\n\r\n    let isWinner = guessedWordArray?.join(\"\") == data.answer;\r\n    \r\n\r\n    function handleAplhabetClick(e) {\r\n        let clickedLetter = e.target.innerText;\r\n        if (data.answer.includes(clickedLetter)) {\r\n            setData({\r\n                ...data,\r\n                guessed: data.guessed.add(clickedLetter),\r\n            })\r\n        }\r\n        else {\r\n            setData({\r\n                ...data,\r\n                noOfWrong: data.noOfWrong + 1\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(gameOver || isWinner){\r\n            if (isWinner) {\r\n                setGameStatus(\"You win!\")\r\n            }\r\n            else{\r\n                setGameStatus(\"You lose!\")\r\n            }\r\n        }\r\n    },[guessedWordArray])\r\n\r\n    function resetGame() {\r\n        setData({\r\n            noOfWrong: 0,\r\n            guessed: new Set(),\r\n            answer: randomWord(),\r\n        })\r\n\r\n        setGameStatus(\"\")\r\n    }\r\n\r\n    function sidebarOpen(){\r\n        let sidebar = document.querySelector(\".sidebar\")\r\n        sidebar.classList.toggle(\"active\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div onClick={sidebarOpen} className=\"burger\">\r\n            <div className='burger_line'></div>\r\n            <div className='burger_line'></div>\r\n            <div className='burger_line'></div>\r\n        </div>\r\n\r\n        <div className=\"sidebar\">\r\n            <h2>Instructions and guides</h2>\r\n            <p>\r\n            You have to guess the movie based on the hints given.\r\n            You have 6 chances in total. \r\n            <br /><br />\r\n            Guess the movie before you drain your chances, otherwise, you let the person die:(\r\n            <br /><br />\r\n            Multi word movies are seperated with a hyphen (\"-\")\r\n            <br /><br />\r\n            Enjoy!\r\n            </p>\r\n        </div>\r\n\r\n\r\n            <h2>Hangman</h2>\r\n\r\n            <img src={defaultProps.images[data.noOfWrong]} alt=\"image\" /><br/>\r\n            <h3>Guess the movie!</h3>\r\n            <span>Hint: {movies[data.answer]}</span><br/>\r\n            <p>Guesses left: {defaultProps.maxWrong - data.noOfWrong} of {defaultProps.maxWrong}</p>\r\n\r\n\r\n            <div className=\"blanks\">\r\n            {!gameOver ? guessedWord() : data.answer}\r\n            </div>\r\n\r\n            <div>\r\n                {alphabets.map(letter => {\r\n                    return (<button\r\n                        key={letter}\r\n                        onClick={handleAplhabetClick}\r\n                        disabled={data.guessed.has(letter) || gameOver}\r\n                        className=\"letterbtn\"\r\n                    >\r\n                    {letter}\r\n                    </button>)\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"gameStatus\">{gameStatus}</div>\r\n            <button id=\"reset\" onClick={resetGame}> Reset </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hangman","export default __webpack_public_path__ + \"static/media/0.72059a7f.jpg\";","export default __webpack_public_path__ + \"static/media/1.9a23caa6.jpg\";","export default __webpack_public_path__ + \"static/media/2.27a86c9e.jpg\";","export default __webpack_public_path__ + \"static/media/3.0db4986f.jpg\";","export default __webpack_public_path__ + \"static/media/4.b272e7f1.jpg\";","export default __webpack_public_path__ + \"static/media/5.bb0f0ce1.jpg\";","export default __webpack_public_path__ + \"static/media/6.33ea7012.jpg\";","import Hangman from \"./Hangman\"\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Hangman />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}